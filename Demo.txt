
1) Enable Container Module
sudo SUSEConnect -p sle-module-containers/12/x86_64 -r ''

2) Install docker
sudo zypper install docker
sudo systemctl enable docker.service && sudo systemctl start docker.service

3) SUSE Linux Enterprise Images for Docker
sudo zypper install sle2docker

4) Let's search for docker Images and install a couple of them 

zypper --quiet search  docker-image

S | Name                              | Summary                                                   | Type      
--+-----------------------------------+-----------------------------------------------------------+-----------
  | docker-image-migrator             | No-downtime migration tool for Docker v1 image manifests. | srcpackage
i | docker-image-migrator             | No-downtime migration tool for Docker v1 image manifests. | package   
  | docker-image-migrator-debuginfo   | Debug information for package docker-image-migrator       | package   
  | docker-image-migrator-debugsource | Debug sources for package docker-image-migrator           | package   
i | sles11sp3-docker-image            | SUSE Linux Enterprise Server 11sp3 image for Docker       | package   
i | sles11sp4-docker-image            | SUSE Linux Enterprise Server 11sp4 image for Docker       | package   
i | sles12-docker-image               | SUSE Linux Enterprise Server 12 image for Docker          | package   
i | sles12sp1-docker-image            | SUSE Linux Enterprise Server 12sp1 image for Docker       | package   

sudo zypper install sles11sp3-docker-image
sudo zypper install sles12-docker-image

5) We can now list images

sudo sle2docker list
Available pre-built images:
 - sles11sp3-docker.x86_64-1.1.0-Build9.1
 - sles11sp4-docker.x86_64-1.1.1-Build11.1
 - sles12-docker.x86_64-1.1.1-Build13.2
 - sles12sp1-docker.x86_64-1.0.4-Build5.1



6) Once installed they must be activated for been available to docker ;)

sle2docker activate sles12sp1-docker.x86_64-1.0.4-Build5.1


7) Now images are available to docker...
docker images
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
suse/sles11sp3              1.1.0               a76d13598ee3        54 minutes ago      76.52 MB
suse/sles11sp3              latest              a76d13598ee3        54 minutes ago      76.52 MB
use/sles12sp1              1.0.4               b9d3275d07e6        4 weeks ago         98.88 MB
suse/sles12sp1              latest              b9d3275d07e6        4 weeks ago         98.88 MB
busybox                     latest              47bcc53f74dc        10 weeks ago        1.113 MB



8) Let's build the simplest nodeapp using SuSE Enterprise Linux as Base Image ;)

docker build -f suse-docker-simplest-nodeapp/Dockerfile -t suse-docker-simplest-nodeapp:demo suse-docker-simplest-nodeapp


9) Let's now build a nginx loadbalancer using SuSE Enterprise Linux as Base Image :)

docker build -f suse-docker-nginx-lb/Dockerfile -t suse-docker-nginx-lb:demo suse-docker-nginx-lb

10) Now that we have our two images ready, we can start our simplest nodeapp application using docker compose

docker-compose -f simplest-nodeapp-lb-compose.yml up -d


11) Now let's check that everything is working

docker ps 
CONTAINER ID        IMAGE                               COMMAND                  CREATED             STATUS              PORTS                NAMES
566c9a6391ee        suse-docker-simplest-nodeapp:demo   "node simpleapp.js 30"   15 seconds ago      Up 14 seconds       3000/tcp             demo_simplest-nodeapp_1
6e3ed5bab373        suse-docker-nginx-lb:demo           "nginx -g 'daemon off"   15 seconds ago      Up 14 seconds       0.0.0.0:80->80/tcp   nginx-lb


12) Check service locally with simple wget -q http://0.0.0.0:80 -O -






---------------------------------------

Update Images to DTR

1) First update your local docker engine-client certs

openssl s_client -connect 10.0.2.12:443 -showcerts </dev/null 2>/dev/null | openssl x509 -outform PEM |sudo tee /etc/pki/trust/anchors/10.0.2.12.crt

---
We can use instead 

docker run --rm  -v /etc/pki/trust/anchors:/OUTDIR frjaraur/simple-ucp-tools -n https://10.0.2.12:443 -d

----

sudo update-ca-certificates

sudo systemctl restart docker.service


2) Now login to DTR

docker login 10.0.2.12

(I will use admin for this demo....)


3) We will Tag the images for the demo ...

docker tag suse-docker-nginx-lb:demo 10.0.2.12/admin/suse-docker-nginx-lb:demo

docker tag suse-docker-simplest-nodeapp:demo 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo

4) Push images to DTR...

docker push 10.0.2.12/admin/suse-docker-nginx-lb:demo
The push refers to a repository [10.0.2.12/admin/suse-docker-nginx-lb]
ef242cf7ce17: Pushed 
635e8f2943ec: Pushed 
176d58f16903: Pushed 
4e40336ab4da: Pushed 
02dc60a9f64e: Pushed 
e92526364c14: Pushed 
demo: digest: sha256:01a505eff2d614295b78053748ddb7de488c3444008cc707beb8d0c94055810a size: 5669


docker push 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo
The push refers to a repository [10.0.2.12/admin/suse-docker-simplest-nodeapp]
65c5f6665855: Pushed 
94d97b719611: Pushed 
61df25ff4e75: Pushed 
7d0ece5c9002: Pushed 
d2db801c858e: Pushed 
3c51a423be42: Pushed 
e92526364c14: Mounted from admin/suse-docker-nginx-lb 
demo: digest: sha256:d2ce7139056f00fa77fcad42af6043f734aac428a0f68cc51cf2532286749f19 size: 7722



--------------------
vmsuse2:~/DEMO/certs # docker ps
CONTAINER ID        IMAGE                                                                     COMMAND                  CREATED              STATUS              PORTS                                          NAMES
ba7eba8c95fd        10.0.2.12/admin/suse-docker-nginx-lb:demo                                 "nginx -g 'daemon off"   About a minute ago   Up About a minute   10.0.2.11:8080->80/tcp                         vmsuse1/serene_brahmagupta
81e0234652ba        10.0.2.12/admin/suse-docker-simplest-nodeapp:demo                         "node simpleapp.js 30"   2 minutes ago        Up 2 minutes        3000/tcp                                       vmsuse1/trusting_brahmagupta
aa84166e7449        10.0.2.12/admin/suse-docker-simplest-nodeapp:demo                         "node simpleapp.js 30"   2 minutes ago        Up 2 minutes        3000/tcp                                       vmsuse1/kickass_lamarr
6e03021e366c        10.0.2.12/admin/suse-docker-simplest-nodeapp:demo                         "node simpleapp.js 30"   2 minutes ago        Up 2 minutes        3000/tcp                                       vmsuse1/berserk_banach
8c49289a876a        10.0.2.12/admin/suse-docker-simplest-nodeapp:demo                         "node simpleapp.js 30"   3 minutes ago        Up 3 minutes        3000/tcp                                       vmsuse1/condescending_knuth
80fbc0703c8a        docker/dtr-nginx:2.0.0                                                    "/init --skip-runit /"   8 hours ago          Up About an hour    10.0.2.12:80->80/tcp, 10.0.2.12:443->443/tcp   vmsuse2/dtr-nginx-30588775d0fb
97da82ee95a0        docker/dtr-api:2.0.0                                                      "/bin/server"            8 hours ago          Up About an hour    80/tcp                                         vmsuse2/dtr-api-30588775d0fb
91e685002e05        docker/dtr-registry:2.0.0                                                 "/init --skip-runit /"   8 hours ago          Up About an hour    3000/tcp                                       vmsuse2/dtr-registry-30588775d0fb
e4f70295033a        docker/dtr-rethink:2.0.0                                                  "/start.sh --bind all"   8 hours ago          Up About an hour    8080/tcp                                       vmsuse2/dtr-rethinkdb-30588775d0fb
f741e177ffb1        sha256:205bc764d14b5c6980ef5812bc0587c30aa22e8c233280d36701e2f347bf4043   "/etcd"                  8 hours ago          Up About an hour    2379-2380/tcp, 4001/tcp, 7001/tcp              vmsuse2/dtr-etcd-30588775d0fb



vmsuse2:~/DEMO/certs # docker run -d --net=DEMO-NET --net-alias=simplest-nodeapp 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo
8c49289a876aa05371717437d4b09942fd6b2b748968e8553deeb8964acdc502

vmsuse2:~/DEMO/certs # docker run -d --net=DEMO-NET --net-alias=simplest-nodeapp -e constrains:node==vmsuse3 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo
6e03021e366c9645546846e95e80c267296e2e5d5f948c0681d92aab7f2faa14

vmsuse2:~/DEMO/certs # docker run -d --net=DEMO-NET --net-alias=simplest-nodeapp -e constrains:node==vmsuse1 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo
aa84166e74493763987b289ccb64653152d26361bc84ce38921dbc85d6f80d70

vmsuse2:~/DEMO/certs # docker run -d --net=DEMO-NET --net-alias=simplest-nodeapp -e constrains:node==vmsuse2 10.0.2.12/admin/suse-docker-simplest-nodeapp:demo
81e0234652ba48353f8645e14d80e63d3500f868e948ce639a392e26a5b0230d

vmsuse2:~/DEMO/certs # docker run -d --net=DEMO-NET --net-alias=loadbalancer -p 8080:80 10.0.2.12/admin/suse-docker-nginx-lb:demo
ba7eba8c95fd0008fccb5d758095671a031972af14f6bc74646373315df774e9


vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.4 - aa84166e7449
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.3 - 6e03021e366c
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.5 - 81e0234652ba
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.2 - 8c49289a876a
vmsuse2:~/DEMO/certs # wget -q http://10.0.2.11:8080 -O -
10.0.1.5 - 81e0234652ba




